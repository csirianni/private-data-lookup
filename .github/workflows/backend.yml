name: Backend

on: [pull_request, push]
  
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.0
      
    - name: Create default profile
      working-directory: ./backend
      run: conan profile detect
      
    # - name: Update profile
    #   working-directory: ./backend
    #   run: conan profile update settings.compiler.libcxx=libstdc++11 default
      
    - name: Install dependencies
      working-directory: ./backend
      run: conan install . -s build_type=${{env.BUILD_TYPE}} --output-folder=${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ./backend
      run: cmake . -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release 

    - name: Build
      working-directory: ./backend
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Run tests
      working-directory: ./backend
      run: ./backend/build/test/pdl_test